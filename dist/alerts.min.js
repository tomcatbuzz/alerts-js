!function(n){var o={};function r(e){if(o[e])return o[e].exports;var t=o[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,r),t.l=!0,t.exports}r.m=n,r.c=o,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)r.d(n,o,function(e){return t[e]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s="./src/dist/alerts.js")}({"./src/dist/alerts.js":
/*!****************************!*\
  !*** ./src/dist/alerts.js ***!
  \****************************/
/*! no static exports found */function(module,exports){eval("function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Alert =\n/*#__PURE__*/\nfunction () {\n  function Alert(object) {\n    _classCallCheck(this, Alert);\n\n    this.object = object; // Implements Interface AlertOptions\n  } // Alert Function\n\n\n  _createClass(Alert, [{\n    key: \"alert\",\n    value: function alert() {\n      if (this.object.theme) {\n        console.log(\"Entered the theme \".concat(this.object.theme.name));\n      }\n\n      if (this.object.theme.name == 'default' || !this.object.theme.name) {\n        // Loading the CSS file for theme\n        var bodyHeadElem = document.getElementsByTagName('head')[0];\n        var bodyHeadElemLink = document.createElement('link');\n        bodyHeadElemLink.rel = 'stylesheet';\n        bodyHeadElemLink.type = 'text/css'; // bodyHeadElemLink.onload = () => {\n\n        document.addEventListener('DOMContentLoaded', function () {\n          console.log('Window Onload function');\n        }, false);\n        bodyHeadElemLink.href = this.object.theme.src || 'https://utkarsh.co/css/default.css'; // }\n\n        bodyHeadElem.appendChild(bodyHeadElemLink);\n      } // Remove previous alert if it exists\n\n\n      if (document.getElementsByClassName('AlertsJS__overlay')[0]) {\n        var _overlayElem = document.getElementsByClassName('AlertsJS__overlay')[0];\n\n        _overlayElem.parentNode.removeChild(_overlayElem);\n      } // Creating the overlay element\n\n\n      var overlayElem = document.createElement('div');\n      overlayElem.classList.add('AlertsJS__overlay'); // Creating an alert element\n\n      var alertElem = document.createElement('div');\n      alertElem.classList.add('AlertsJS__alert'); // Close Modal Function\n\n      var close = function close() {\n        overlayElem.classList.add('AlertsJS__fadeOut');\n        setTimeout(function () {\n          if (overlayElem.parentNode) {\n            overlayElem.parentNode.removeChild(overlayElem);\n          }\n        }, 700);\n      }; // Listens for ESC to close the modal\n\n\n      window.addEventListener(\"keydown\", function (e) {\n        if (e.keyCode == 27) {\n          close();\n        }\n      }, false); // Timeout function\n\n      if (this.object.timeout) {\n        setTimeout(close, this.object.timeout * 1000);\n      } // Checks whether an icon parameter is passed\n\n\n      if (this.object.icon) {\n        // Creating an icon element\n        var iconElem = document.createElement('img');\n\n        switch (this.object.icon) {\n          case 'success':\n            iconElem.src = 'icons/success.png';\n            iconElem.draggable = false;\n            break;\n        } // iconElem.classList.add('icon');\n\n\n        alertElem.appendChild(iconElem);\n      } // Checks whether a title is passed\n\n\n      if (this.object.title) {\n        // Creating a title element\n        var titleElem = document.createElement('h1');\n        titleElem.textContent = this.object.title;\n        alertElem.appendChild(titleElem);\n      } else {\n        return console.log('No title is provided.');\n      } // Checks whether a message a passed\n\n\n      if (this.object.message) {\n        var messageElem = document.createElement('p');\n        messageElem.textContent = this.object.message;\n        alertElem.appendChild(messageElem);\n      } else {\n        return console.log('No message is provided.');\n      }\n\n      if (this.object.customHTML) {\n        if (!this.object.customHTML.content) console.error('customHTML should have atleast one identifier or content property.');\n        var customElem = document.createElement('div');\n        customElem.innerHTML = this.object.customHTML.content;\n        customElem.classList.add('AlertsJS__customHTML');\n        alertElem.appendChild(customElem);\n      } // Checks whether an action is provided\n\n\n      if (this.object.action) {\n        switch (this.object.action.type) {\n          case 'link':\n            if (this.object.action.redirect) {\n              var buttonElem = document.createElement('a');\n              buttonElem.href = this.object.action.redirect;\n              buttonElem.textContent = this.object.action.text || 'Ok!';\n              buttonElem.addEventListener('click', close);\n              alertElem.appendChild(buttonElem);\n            }\n\n            break;\n\n          default:\n            console.error('Unknown action');\n            break;\n        }\n      } else {\n        var closeButtonElem = document.createElement('button');\n        closeButtonElem.textContent = this.object.closeButtonText || 'Submit';\n        closeButtonElem.addEventListener('click', close);\n        alertElem.appendChild(closeButtonElem);\n      }\n\n      if (this.object.button) {\n        if (this.object.button.action && this.object.button.action.type == 'link' && this.object.button.action.redirect) {\n          var buttonElemLink = document.createElement('a');\n          buttonElemLink.href = this.object.button.action.redirect;\n          buttonElemLink.textContent = this.object.button.text;\n          alertElem.appendChild(buttonElemLink);\n        } else {\n          var _buttonElem = document.createElement('button');\n\n          _buttonElem.textContent = this.object.button.text;\n          _buttonElem.type = this.object.button.type || null;\n          alertElem.appendChild(_buttonElem);\n        }\n      } //   Appending to body element\n\n\n      document.body.appendChild(overlayElem);\n      overlayElem.appendChild(alertElem);\n    }\n  }]);\n\n  return Alert;\n}();\n\nvar travisCITest = function travisCITest() {\n  return true;\n};\n\nmodule.exports = {\n  Alert: Alert,\n  travisCITest: travisCITest\n};\n\n//# sourceURL=webpack:///./src/dist/alerts.js?")}});